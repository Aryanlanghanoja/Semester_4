
DEMO_1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000002d0  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000001e  00800060  000002d0  00000344  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000362  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000394  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000070  00000000  00000000  000003d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000a9b  00000000  00000000  00000440  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000627  00000000  00000000  00000edb  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000004d8  00000000  00000000  00001502  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000e4  00000000  00000000  000019dc  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003af  00000000  00000000  00001ac0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000004e3  00000000  00000000  00001e6f  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000060  00000000  00000000  00002352  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e0 ed       	ldi	r30, 0xD0	; 208
  68:	f2 e0       	ldi	r31, 0x02	; 2
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	ae 37       	cpi	r26, 0x7E	; 126
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 51 01 	call	0x2a2	; 0x2a2 <main>
  7a:	0c 94 66 01 	jmp	0x2cc	; 0x2cc <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <Pattern_1>:
    _delay_ms(500);
	}
}

void Pattern_1() {
    PORTB = 0xAA;
  82:	8a ea       	ldi	r24, 0xAA	; 170
  84:	88 bb       	out	0x18, r24	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  86:	2f e9       	ldi	r18, 0x9F	; 159
  88:	86 e8       	ldi	r24, 0x86	; 134
  8a:	91 e0       	ldi	r25, 0x01	; 1
  8c:	21 50       	subi	r18, 0x01	; 1
  8e:	80 40       	sbci	r24, 0x00	; 0
  90:	90 40       	sbci	r25, 0x00	; 0
  92:	e1 f7       	brne	.-8      	; 0x8c <Pattern_1+0xa>
  94:	00 c0       	rjmp	.+0      	; 0x96 <Pattern_1+0x14>
  96:	00 00       	nop
    _delay_ms(500);
    PORTB = 0x55;
  98:	85 e5       	ldi	r24, 0x55	; 85
  9a:	88 bb       	out	0x18, r24	; 24
  9c:	2f e9       	ldi	r18, 0x9F	; 159
  9e:	86 e8       	ldi	r24, 0x86	; 134
  a0:	91 e0       	ldi	r25, 0x01	; 1
  a2:	21 50       	subi	r18, 0x01	; 1
  a4:	80 40       	sbci	r24, 0x00	; 0
  a6:	90 40       	sbci	r25, 0x00	; 0
  a8:	e1 f7       	brne	.-8      	; 0xa2 <Pattern_1+0x20>
  aa:	00 c0       	rjmp	.+0      	; 0xac <Pattern_1+0x2a>
  ac:	00 00       	nop
  ae:	08 95       	ret

000000b0 <Pattern_2>:
    _delay_ms(500);
}

void Pattern_2() {
    PORTA = 0xF0;
  b0:	80 ef       	ldi	r24, 0xF0	; 240
  b2:	8b bb       	out	0x1b, r24	; 27
  b4:	2f e9       	ldi	r18, 0x9F	; 159
  b6:	86 e8       	ldi	r24, 0x86	; 134
  b8:	91 e0       	ldi	r25, 0x01	; 1
  ba:	21 50       	subi	r18, 0x01	; 1
  bc:	80 40       	sbci	r24, 0x00	; 0
  be:	90 40       	sbci	r25, 0x00	; 0
  c0:	e1 f7       	brne	.-8      	; 0xba <Pattern_2+0xa>
  c2:	00 c0       	rjmp	.+0      	; 0xc4 <Pattern_2+0x14>
  c4:	00 00       	nop
    _delay_ms(500);
    PORTA = 0x0F;
  c6:	8f e0       	ldi	r24, 0x0F	; 15
  c8:	8b bb       	out	0x1b, r24	; 27
  ca:	2f e9       	ldi	r18, 0x9F	; 159
  cc:	86 e8       	ldi	r24, 0x86	; 134
  ce:	91 e0       	ldi	r25, 0x01	; 1
  d0:	21 50       	subi	r18, 0x01	; 1
  d2:	80 40       	sbci	r24, 0x00	; 0
  d4:	90 40       	sbci	r25, 0x00	; 0
  d6:	e1 f7       	brne	.-8      	; 0xd0 <Pattern_2+0x20>
  d8:	00 c0       	rjmp	.+0      	; 0xda <Pattern_2+0x2a>
  da:	00 00       	nop
  dc:	08 95       	ret

000000de <Pattern_3>:
    _delay_ms(500);
}

void Pattern_3() {
    PORTA = 0x00;
  de:	1b ba       	out	0x1b, r1	; 27
  e0:	2f e9       	ldi	r18, 0x9F	; 159
  e2:	86 e8       	ldi	r24, 0x86	; 134
  e4:	91 e0       	ldi	r25, 0x01	; 1
  e6:	21 50       	subi	r18, 0x01	; 1
  e8:	80 40       	sbci	r24, 0x00	; 0
  ea:	90 40       	sbci	r25, 0x00	; 0
  ec:	e1 f7       	brne	.-8      	; 0xe6 <Pattern_3+0x8>
  ee:	00 c0       	rjmp	.+0      	; 0xf0 <Pattern_3+0x12>
  f0:	00 00       	nop
    _delay_ms(500);
    PORTA = 0x01;
  f2:	81 e0       	ldi	r24, 0x01	; 1
  f4:	8b bb       	out	0x1b, r24	; 27

    while (PORTA != 0x00) {
  f6:	10 c0       	rjmp	.+32     	; 0x118 <Pattern_3+0x3a>
  f8:	2f e9       	ldi	r18, 0x9F	; 159
  fa:	86 e8       	ldi	r24, 0x86	; 134
  fc:	91 e0       	ldi	r25, 0x01	; 1
  fe:	21 50       	subi	r18, 0x01	; 1
 100:	80 40       	sbci	r24, 0x00	; 0
 102:	90 40       	sbci	r25, 0x00	; 0
 104:	e1 f7       	brne	.-8      	; 0xfe <Pattern_3+0x20>
 106:	00 c0       	rjmp	.+0      	; 0x108 <Pattern_3+0x2a>
 108:	00 00       	nop
        _delay_ms(500);
        PORTA = PORTA << 1;
 10a:	8b b3       	in	r24, 0x1b	; 27
 10c:	88 0f       	add	r24, r24
 10e:	8b bb       	out	0x1b, r24	; 27

        if (PORTA == 0xFF) {
 110:	8b b3       	in	r24, 0x1b	; 27
 112:	8f 3f       	cpi	r24, 0xFF	; 255
 114:	09 f4       	brne	.+2      	; 0x118 <Pattern_3+0x3a>
            PORTA == 0x01;
 116:	8b b3       	in	r24, 0x1b	; 27
void Pattern_3() {
    PORTA = 0x00;
    _delay_ms(500);
    PORTA = 0x01;

    while (PORTA != 0x00) {
 118:	8b b3       	in	r24, 0x1b	; 27
 11a:	81 11       	cpse	r24, r1
 11c:	ed cf       	rjmp	.-38     	; 0xf8 <Pattern_3+0x1a>

        if (PORTA == 0xFF) {
            PORTA == 0x01;
        }
    }
}
 11e:	08 95       	ret

00000120 <Pattern_4>:

void Pattern_4() {
 120:	cf 93       	push	r28
 122:	df 93       	push	r29
 124:	cd b7       	in	r28, 0x3d	; 61
 126:	de b7       	in	r29, 0x3e	; 62
 128:	60 97       	sbiw	r28, 0x10	; 16
 12a:	0f b6       	in	r0, 0x3f	; 63
 12c:	f8 94       	cli
 12e:	de bf       	out	0x3e, r29	; 62
 130:	0f be       	out	0x3f, r0	; 63
 132:	cd bf       	out	0x3d, r28	; 61
    PORTA = 0xFF;
 134:	8f ef       	ldi	r24, 0xFF	; 255
 136:	8b bb       	out	0x1b, r24	; 27
 138:	2f e9       	ldi	r18, 0x9F	; 159
 13a:	36 e8       	ldi	r19, 0x86	; 134
 13c:	41 e0       	ldi	r20, 0x01	; 1
 13e:	21 50       	subi	r18, 0x01	; 1
 140:	30 40       	sbci	r19, 0x00	; 0
 142:	40 40       	sbci	r20, 0x00	; 0
 144:	e1 f7       	brne	.-8      	; 0x13e <Pattern_4+0x1e>
 146:	00 c0       	rjmp	.+0      	; 0x148 <Pattern_4+0x28>
 148:	00 00       	nop
    _delay_ms(500);
    int Sequences[8] = { 0xFE,0xFD,0xFB,0xF7,0xEF,0xDF,0xBF,0x7F };
 14a:	80 e1       	ldi	r24, 0x10	; 16
 14c:	e0 e6       	ldi	r30, 0x60	; 96
 14e:	f0 e0       	ldi	r31, 0x00	; 0
 150:	de 01       	movw	r26, r28
 152:	11 96       	adiw	r26, 0x01	; 1
 154:	01 90       	ld	r0, Z+
 156:	0d 92       	st	X+, r0
 158:	8a 95       	dec	r24
 15a:	e1 f7       	brne	.-8      	; 0x154 <Pattern_4+0x34>

    int i = 0;
 15c:	80 e0       	ldi	r24, 0x00	; 0
 15e:	90 e0       	ldi	r25, 0x00	; 0
    while (i <= 9) {
 160:	25 c0       	rjmp	.+74     	; 0x1ac <Pattern_4+0x8c>
        PORTA = Sequences[i];
 162:	fc 01       	movw	r30, r24
 164:	ee 0f       	add	r30, r30
 166:	ff 1f       	adc	r31, r31
 168:	21 e0       	ldi	r18, 0x01	; 1
 16a:	30 e0       	ldi	r19, 0x00	; 0
 16c:	2c 0f       	add	r18, r28
 16e:	3d 1f       	adc	r19, r29
 170:	e2 0f       	add	r30, r18
 172:	f3 1f       	adc	r31, r19
 174:	20 81       	ld	r18, Z
 176:	2b bb       	out	0x1b, r18	; 27
 178:	3f e9       	ldi	r19, 0x9F	; 159
 17a:	46 e8       	ldi	r20, 0x86	; 134
 17c:	21 e0       	ldi	r18, 0x01	; 1
 17e:	31 50       	subi	r19, 0x01	; 1
 180:	40 40       	sbci	r20, 0x00	; 0
 182:	20 40       	sbci	r18, 0x00	; 0
 184:	e1 f7       	brne	.-8      	; 0x17e <Pattern_4+0x5e>
 186:	00 c0       	rjmp	.+0      	; 0x188 <Pattern_4+0x68>
 188:	00 00       	nop
        _delay_ms(500);

        if (i == 9) {
 18a:	89 30       	cpi	r24, 0x09	; 9
 18c:	91 05       	cpc	r25, r1
 18e:	69 f4       	brne	.+26     	; 0x1aa <Pattern_4+0x8a>
            i = -1;
            PORTA = 0xFF;
 190:	8f ef       	ldi	r24, 0xFF	; 255
 192:	8b bb       	out	0x1b, r24	; 27
 194:	3f e9       	ldi	r19, 0x9F	; 159
 196:	46 e8       	ldi	r20, 0x86	; 134
 198:	81 e0       	ldi	r24, 0x01	; 1
 19a:	31 50       	subi	r19, 0x01	; 1
 19c:	40 40       	sbci	r20, 0x00	; 0
 19e:	80 40       	sbci	r24, 0x00	; 0
 1a0:	e1 f7       	brne	.-8      	; 0x19a <Pattern_4+0x7a>
 1a2:	00 c0       	rjmp	.+0      	; 0x1a4 <Pattern_4+0x84>
 1a4:	00 00       	nop
    while (i <= 9) {
        PORTA = Sequences[i];
        _delay_ms(500);

        if (i == 9) {
            i = -1;
 1a6:	8f ef       	ldi	r24, 0xFF	; 255
 1a8:	9f ef       	ldi	r25, 0xFF	; 255
            PORTA = 0xFF;
            _delay_ms(500);
        }
        i++;
 1aa:	01 96       	adiw	r24, 0x01	; 1
    PORTA = 0xFF;
    _delay_ms(500);
    int Sequences[8] = { 0xFE,0xFD,0xFB,0xF7,0xEF,0xDF,0xBF,0x7F };

    int i = 0;
    while (i <= 9) {
 1ac:	8a 30       	cpi	r24, 0x0A	; 10
 1ae:	91 05       	cpc	r25, r1
 1b0:	c4 f2       	brlt	.-80     	; 0x162 <Pattern_4+0x42>
            PORTA = 0xFF;
            _delay_ms(500);
        }
        i++;
    }
}
 1b2:	60 96       	adiw	r28, 0x10	; 16
 1b4:	0f b6       	in	r0, 0x3f	; 63
 1b6:	f8 94       	cli
 1b8:	de bf       	out	0x3e, r29	; 62
 1ba:	0f be       	out	0x3f, r0	; 63
 1bc:	cd bf       	out	0x3d, r28	; 61
 1be:	df 91       	pop	r29
 1c0:	cf 91       	pop	r28
 1c2:	08 95       	ret

000001c4 <Pattern_5>:

void Pattern_5() {
    PORTA = 0x00;
 1c4:	1b ba       	out	0x1b, r1	; 27
 1c6:	2f e9       	ldi	r18, 0x9F	; 159
 1c8:	86 e8       	ldi	r24, 0x86	; 134
 1ca:	91 e0       	ldi	r25, 0x01	; 1
 1cc:	21 50       	subi	r18, 0x01	; 1
 1ce:	80 40       	sbci	r24, 0x00	; 0
 1d0:	90 40       	sbci	r25, 0x00	; 0
 1d2:	e1 f7       	brne	.-8      	; 0x1cc <Pattern_5+0x8>
 1d4:	00 c0       	rjmp	.+0      	; 0x1d6 <Pattern_5+0x12>
 1d6:	00 00       	nop
    _delay_ms(500);
    PORTA = 0x80;
 1d8:	80 e8       	ldi	r24, 0x80	; 128
 1da:	8b bb       	out	0x1b, r24	; 27

    while (PORTA != 0x00) {
 1dc:	10 c0       	rjmp	.+32     	; 0x1fe <Pattern_5+0x3a>
 1de:	2f e9       	ldi	r18, 0x9F	; 159
 1e0:	86 e8       	ldi	r24, 0x86	; 134
 1e2:	91 e0       	ldi	r25, 0x01	; 1
 1e4:	21 50       	subi	r18, 0x01	; 1
 1e6:	80 40       	sbci	r24, 0x00	; 0
 1e8:	90 40       	sbci	r25, 0x00	; 0
 1ea:	e1 f7       	brne	.-8      	; 0x1e4 <Pattern_5+0x20>
 1ec:	00 c0       	rjmp	.+0      	; 0x1ee <Pattern_5+0x2a>
 1ee:	00 00       	nop
        _delay_ms(500);
        PORTA = PORTA >> 1;
 1f0:	8b b3       	in	r24, 0x1b	; 27
 1f2:	86 95       	lsr	r24
 1f4:	8b bb       	out	0x1b, r24	; 27

        if (PORTA == 0x01) {
 1f6:	8b b3       	in	r24, 0x1b	; 27
 1f8:	81 30       	cpi	r24, 0x01	; 1
 1fa:	09 f4       	brne	.+2      	; 0x1fe <Pattern_5+0x3a>
            PORTA == 0x80;
 1fc:	8b b3       	in	r24, 0x1b	; 27
void Pattern_5() {
    PORTA = 0x00;
    _delay_ms(500);
    PORTA = 0x80;

    while (PORTA != 0x00) {
 1fe:	8b b3       	in	r24, 0x1b	; 27
 200:	81 11       	cpse	r24, r1
 202:	ed cf       	rjmp	.-38     	; 0x1de <Pattern_5+0x1a>

        if (PORTA == 0x01) {
            PORTA == 0x80;
        }
    }
}
 204:	08 95       	ret

00000206 <Pattern_6>:

void Pattern_6() {
 206:	cf 93       	push	r28
 208:	df 93       	push	r29
 20a:	cd b7       	in	r28, 0x3d	; 61
 20c:	de b7       	in	r29, 0x3e	; 62
 20e:	2e 97       	sbiw	r28, 0x0e	; 14
 210:	0f b6       	in	r0, 0x3f	; 63
 212:	f8 94       	cli
 214:	de bf       	out	0x3e, r29	; 62
 216:	0f be       	out	0x3f, r0	; 63
 218:	cd bf       	out	0x3d, r28	; 61
    PORTA = 0x00;
 21a:	1b ba       	out	0x1b, r1	; 27
 21c:	2f e9       	ldi	r18, 0x9F	; 159
 21e:	36 e8       	ldi	r19, 0x86	; 134
 220:	41 e0       	ldi	r20, 0x01	; 1
 222:	21 50       	subi	r18, 0x01	; 1
 224:	30 40       	sbci	r19, 0x00	; 0
 226:	40 40       	sbci	r20, 0x00	; 0
 228:	e1 f7       	brne	.-8      	; 0x222 <Pattern_6+0x1c>
 22a:	00 c0       	rjmp	.+0      	; 0x22c <Pattern_6+0x26>
 22c:	00 00       	nop
    _delay_ms(500);
    int Sequences[7] = { 0x81,0x42,0x24,0x18,0x24,0x42,0x81 };
 22e:	8e e0       	ldi	r24, 0x0E	; 14
 230:	e0 e7       	ldi	r30, 0x70	; 112
 232:	f0 e0       	ldi	r31, 0x00	; 0
 234:	de 01       	movw	r26, r28
 236:	11 96       	adiw	r26, 0x01	; 1
 238:	01 90       	ld	r0, Z+
 23a:	0d 92       	st	X+, r0
 23c:	8a 95       	dec	r24
 23e:	e1 f7       	brne	.-8      	; 0x238 <Pattern_6+0x32>

    int i = 0;
 240:	80 e0       	ldi	r24, 0x00	; 0
 242:	90 e0       	ldi	r25, 0x00	; 0
    while (i <= 7) {
 244:	1a c0       	rjmp	.+52     	; 0x27a <Pattern_6+0x74>
        PORTA = Sequences[i];
 246:	fc 01       	movw	r30, r24
 248:	ee 0f       	add	r30, r30
 24a:	ff 1f       	adc	r31, r31
 24c:	21 e0       	ldi	r18, 0x01	; 1
 24e:	30 e0       	ldi	r19, 0x00	; 0
 250:	2c 0f       	add	r18, r28
 252:	3d 1f       	adc	r19, r29
 254:	e2 0f       	add	r30, r18
 256:	f3 1f       	adc	r31, r19
 258:	20 81       	ld	r18, Z
 25a:	2b bb       	out	0x1b, r18	; 27
 25c:	3f e9       	ldi	r19, 0x9F	; 159
 25e:	46 e8       	ldi	r20, 0x86	; 134
 260:	21 e0       	ldi	r18, 0x01	; 1
 262:	31 50       	subi	r19, 0x01	; 1
 264:	40 40       	sbci	r20, 0x00	; 0
 266:	20 40       	sbci	r18, 0x00	; 0
 268:	e1 f7       	brne	.-8      	; 0x262 <Pattern_6+0x5c>
 26a:	00 c0       	rjmp	.+0      	; 0x26c <Pattern_6+0x66>
 26c:	00 00       	nop
        _delay_ms(500);
        i++;
 26e:	01 96       	adiw	r24, 0x01	; 1

        if (i == 8) {
 270:	88 30       	cpi	r24, 0x08	; 8
 272:	91 05       	cpc	r25, r1
 274:	11 f4       	brne	.+4      	; 0x27a <Pattern_6+0x74>
            i = 0;
 276:	80 e0       	ldi	r24, 0x00	; 0
 278:	90 e0       	ldi	r25, 0x00	; 0
    PORTA = 0x00;
    _delay_ms(500);
    int Sequences[7] = { 0x81,0x42,0x24,0x18,0x24,0x42,0x81 };

    int i = 0;
    while (i <= 7) {
 27a:	88 30       	cpi	r24, 0x08	; 8
 27c:	91 05       	cpc	r25, r1
 27e:	1c f3       	brlt	.-58     	; 0x246 <Pattern_6+0x40>

        if (i == 8) {
            i = 0;
        }
    }
}
 280:	2e 96       	adiw	r28, 0x0e	; 14
 282:	0f b6       	in	r0, 0x3f	; 63
 284:	f8 94       	cli
 286:	de bf       	out	0x3e, r29	; 62
 288:	0f be       	out	0x3f, r0	; 63
 28a:	cd bf       	out	0x3d, r28	; 61
 28c:	df 91       	pop	r29
 28e:	cf 91       	pop	r28
 290:	08 95       	ret

00000292 <Pattern_7>:

void Pattern_7() {
    PORTA = 0x7F;
 292:	8f e7       	ldi	r24, 0x7F	; 127
 294:	8b bb       	out	0x1b, r24	; 27
 296:	08 95       	ret

00000298 <Pattern_8>:
}

void Pattern_8() {
    PORTA = 0xFF;
 298:	8f ef       	ldi	r24, 0xFF	; 255
 29a:	8b bb       	out	0x1b, r24	; 27
 29c:	08 95       	ret

0000029e <Pattern_9>:
}

void Pattern_9() {
    PORTA = 0x00;
 29e:	1b ba       	out	0x1b, r1	; 27
 2a0:	08 95       	ret

000002a2 <main>:
}

int main(void)
{
    /* Replace with your application code */
    DDRB = 0xFF;
 2a2:	8f ef       	ldi	r24, 0xFF	; 255
 2a4:	87 bb       	out	0x17, r24	; 23

    while (1) {
            //Pattern_0();
            Pattern_1();
 2a6:	0e 94 41 00 	call	0x82	; 0x82 <Pattern_1>
            Pattern_2();
 2aa:	0e 94 58 00 	call	0xb0	; 0xb0 <Pattern_2>
            Pattern_3();
 2ae:	0e 94 6f 00 	call	0xde	; 0xde <Pattern_3>
            Pattern_4();
 2b2:	0e 94 90 00 	call	0x120	; 0x120 <Pattern_4>
            Pattern_5();
 2b6:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <Pattern_5>
            Pattern_6();
 2ba:	0e 94 03 01 	call	0x206	; 0x206 <Pattern_6>
            Pattern_7();
 2be:	0e 94 49 01 	call	0x292	; 0x292 <Pattern_7>
            Pattern_8();
 2c2:	0e 94 4c 01 	call	0x298	; 0x298 <Pattern_8>
            Pattern_9();
 2c6:	0e 94 4f 01 	call	0x29e	; 0x29e <Pattern_9>
 2ca:	ed cf       	rjmp	.-38     	; 0x2a6 <main+0x4>

000002cc <_exit>:
 2cc:	f8 94       	cli

000002ce <__stop_program>:
 2ce:	ff cf       	rjmp	.-2      	; 0x2ce <__stop_program>
