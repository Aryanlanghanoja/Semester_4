
Stepper_Motor.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000001ec  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000240  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000240  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000270  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  000002ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000982  00000000  00000000  000002cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000005b4  00000000  00000000  00000c4e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000039a  00000000  00000000  00001202  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  0000159c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000034d  00000000  00000000  000015c0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000480  00000000  00000000  0000190d  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  00001d8d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:


int main(void)
{
	int period;
	DDRD = 0x0F;		/* Make PORTD lower pins as output */
  6c:	8f e0       	ldi	r24, 0x0F	; 15
  6e:	81 bb       	out	0x11, r24	; 17
	period = 100;		/* Set period in between two steps */
	while (1)
	{
		/* Rotate Stepper Motor clockwise with Half step sequence */
		for(int i=0;i<12;i++)
  70:	80 e0       	ldi	r24, 0x00	; 0
  72:	90 e0       	ldi	r25, 0x00	; 0
  74:	59 c0       	rjmp	.+178    	; 0x128 <main+0xbc>
		{
			PORTD = 0x09;
  76:	29 e0       	ldi	r18, 0x09	; 9
  78:	22 bb       	out	0x12, r18	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  7a:	2f ef       	ldi	r18, 0xFF	; 255
  7c:	31 ee       	ldi	r19, 0xE1	; 225
  7e:	44 e0       	ldi	r20, 0x04	; 4
  80:	21 50       	subi	r18, 0x01	; 1
  82:	30 40       	sbci	r19, 0x00	; 0
  84:	40 40       	sbci	r20, 0x00	; 0
  86:	e1 f7       	brne	.-8      	; 0x80 <main+0x14>
  88:	00 c0       	rjmp	.+0      	; 0x8a <main+0x1e>
  8a:	00 00       	nop
			_delay_ms(period);
			PORTD = 0x08;
  8c:	28 e0       	ldi	r18, 0x08	; 8
  8e:	22 bb       	out	0x12, r18	; 18
  90:	2f ef       	ldi	r18, 0xFF	; 255
  92:	31 ee       	ldi	r19, 0xE1	; 225
  94:	44 e0       	ldi	r20, 0x04	; 4
  96:	21 50       	subi	r18, 0x01	; 1
  98:	30 40       	sbci	r19, 0x00	; 0
  9a:	40 40       	sbci	r20, 0x00	; 0
  9c:	e1 f7       	brne	.-8      	; 0x96 <main+0x2a>
  9e:	00 c0       	rjmp	.+0      	; 0xa0 <main+0x34>
  a0:	00 00       	nop
			_delay_ms(period);
			PORTD = 0x0C;
  a2:	2c e0       	ldi	r18, 0x0C	; 12
  a4:	22 bb       	out	0x12, r18	; 18
  a6:	2f ef       	ldi	r18, 0xFF	; 255
  a8:	31 ee       	ldi	r19, 0xE1	; 225
  aa:	44 e0       	ldi	r20, 0x04	; 4
  ac:	21 50       	subi	r18, 0x01	; 1
  ae:	30 40       	sbci	r19, 0x00	; 0
  b0:	40 40       	sbci	r20, 0x00	; 0
  b2:	e1 f7       	brne	.-8      	; 0xac <main+0x40>
  b4:	00 c0       	rjmp	.+0      	; 0xb6 <main+0x4a>
  b6:	00 00       	nop
			_delay_ms(period);
			PORTD = 0x04;
  b8:	24 e0       	ldi	r18, 0x04	; 4
  ba:	22 bb       	out	0x12, r18	; 18
  bc:	2f ef       	ldi	r18, 0xFF	; 255
  be:	31 ee       	ldi	r19, 0xE1	; 225
  c0:	44 e0       	ldi	r20, 0x04	; 4
  c2:	21 50       	subi	r18, 0x01	; 1
  c4:	30 40       	sbci	r19, 0x00	; 0
  c6:	40 40       	sbci	r20, 0x00	; 0
  c8:	e1 f7       	brne	.-8      	; 0xc2 <main+0x56>
  ca:	00 c0       	rjmp	.+0      	; 0xcc <main+0x60>
  cc:	00 00       	nop
			_delay_ms(period);
			PORTD = 0x06;
  ce:	26 e0       	ldi	r18, 0x06	; 6
  d0:	22 bb       	out	0x12, r18	; 18
  d2:	2f ef       	ldi	r18, 0xFF	; 255
  d4:	31 ee       	ldi	r19, 0xE1	; 225
  d6:	44 e0       	ldi	r20, 0x04	; 4
  d8:	21 50       	subi	r18, 0x01	; 1
  da:	30 40       	sbci	r19, 0x00	; 0
  dc:	40 40       	sbci	r20, 0x00	; 0
  de:	e1 f7       	brne	.-8      	; 0xd8 <main+0x6c>
  e0:	00 c0       	rjmp	.+0      	; 0xe2 <main+0x76>
  e2:	00 00       	nop
			_delay_ms(period);
			PORTD = 0x02;
  e4:	22 e0       	ldi	r18, 0x02	; 2
  e6:	22 bb       	out	0x12, r18	; 18
  e8:	2f ef       	ldi	r18, 0xFF	; 255
  ea:	31 ee       	ldi	r19, 0xE1	; 225
  ec:	44 e0       	ldi	r20, 0x04	; 4
  ee:	21 50       	subi	r18, 0x01	; 1
  f0:	30 40       	sbci	r19, 0x00	; 0
  f2:	40 40       	sbci	r20, 0x00	; 0
  f4:	e1 f7       	brne	.-8      	; 0xee <main+0x82>
  f6:	00 c0       	rjmp	.+0      	; 0xf8 <main+0x8c>
  f8:	00 00       	nop
			_delay_ms(period);
			PORTD = 0x03;
  fa:	23 e0       	ldi	r18, 0x03	; 3
  fc:	22 bb       	out	0x12, r18	; 18
  fe:	2f ef       	ldi	r18, 0xFF	; 255
 100:	31 ee       	ldi	r19, 0xE1	; 225
 102:	44 e0       	ldi	r20, 0x04	; 4
 104:	21 50       	subi	r18, 0x01	; 1
 106:	30 40       	sbci	r19, 0x00	; 0
 108:	40 40       	sbci	r20, 0x00	; 0
 10a:	e1 f7       	brne	.-8      	; 0x104 <main+0x98>
 10c:	00 c0       	rjmp	.+0      	; 0x10e <main+0xa2>
 10e:	00 00       	nop
			_delay_ms(period);
			PORTD = 0x01;
 110:	21 e0       	ldi	r18, 0x01	; 1
 112:	22 bb       	out	0x12, r18	; 18
 114:	2f ef       	ldi	r18, 0xFF	; 255
 116:	31 ee       	ldi	r19, 0xE1	; 225
 118:	44 e0       	ldi	r20, 0x04	; 4
 11a:	21 50       	subi	r18, 0x01	; 1
 11c:	30 40       	sbci	r19, 0x00	; 0
 11e:	40 40       	sbci	r20, 0x00	; 0
 120:	e1 f7       	brne	.-8      	; 0x11a <main+0xae>
 122:	00 c0       	rjmp	.+0      	; 0x124 <main+0xb8>
 124:	00 00       	nop
	DDRD = 0x0F;		/* Make PORTD lower pins as output */
	period = 100;		/* Set period in between two steps */
	while (1)
	{
		/* Rotate Stepper Motor clockwise with Half step sequence */
		for(int i=0;i<12;i++)
 126:	01 96       	adiw	r24, 0x01	; 1
 128:	8c 30       	cpi	r24, 0x0C	; 12
 12a:	91 05       	cpc	r25, r1
 12c:	0c f4       	brge	.+2      	; 0x130 <main+0xc4>
 12e:	a3 cf       	rjmp	.-186    	; 0x76 <main+0xa>
			PORTD = 0x03;
			_delay_ms(period);
			PORTD = 0x01;
			_delay_ms(period);
		}
		PORTD = 0x09;		/* Last step to initial position */
 130:	89 e0       	ldi	r24, 0x09	; 9
 132:	82 bb       	out	0x12, r24	; 18
 134:	8f ef       	ldi	r24, 0xFF	; 255
 136:	91 ee       	ldi	r25, 0xE1	; 225
 138:	24 e0       	ldi	r18, 0x04	; 4
 13a:	81 50       	subi	r24, 0x01	; 1
 13c:	90 40       	sbci	r25, 0x00	; 0
 13e:	20 40       	sbci	r18, 0x00	; 0
 140:	e1 f7       	brne	.-8      	; 0x13a <main+0xce>
 142:	00 c0       	rjmp	.+0      	; 0x144 <main+0xd8>
 144:	00 00       	nop
 146:	3f ef       	ldi	r19, 0xFF	; 255
 148:	43 ed       	ldi	r20, 0xD3	; 211
 14a:	80 e3       	ldi	r24, 0x30	; 48
 14c:	31 50       	subi	r19, 0x01	; 1
 14e:	40 40       	sbci	r20, 0x00	; 0
 150:	80 40       	sbci	r24, 0x00	; 0
 152:	e1 f7       	brne	.-8      	; 0x14c <main+0xe0>
 154:	00 c0       	rjmp	.+0      	; 0x156 <main+0xea>
 156:	00 00       	nop
		_delay_ms(period);
		_delay_ms(1000);

		/* Rotate Stepper Motor Anticlockwise with Full step sequence */
		for(int i=0;i<12;i++)
 158:	80 e0       	ldi	r24, 0x00	; 0
 15a:	90 e0       	ldi	r25, 0x00	; 0
 15c:	2d c0       	rjmp	.+90     	; 0x1b8 <main+0x14c>
		{
			PORTD = 0x09;
 15e:	29 e0       	ldi	r18, 0x09	; 9
 160:	22 bb       	out	0x12, r18	; 18
 162:	2f ef       	ldi	r18, 0xFF	; 255
 164:	31 ee       	ldi	r19, 0xE1	; 225
 166:	44 e0       	ldi	r20, 0x04	; 4
 168:	21 50       	subi	r18, 0x01	; 1
 16a:	30 40       	sbci	r19, 0x00	; 0
 16c:	40 40       	sbci	r20, 0x00	; 0
 16e:	e1 f7       	brne	.-8      	; 0x168 <main+0xfc>
 170:	00 c0       	rjmp	.+0      	; 0x172 <main+0x106>
 172:	00 00       	nop
			_delay_ms(period);
			PORTD = 0x03;
 174:	23 e0       	ldi	r18, 0x03	; 3
 176:	22 bb       	out	0x12, r18	; 18
 178:	2f ef       	ldi	r18, 0xFF	; 255
 17a:	31 ee       	ldi	r19, 0xE1	; 225
 17c:	44 e0       	ldi	r20, 0x04	; 4
 17e:	21 50       	subi	r18, 0x01	; 1
 180:	30 40       	sbci	r19, 0x00	; 0
 182:	40 40       	sbci	r20, 0x00	; 0
 184:	e1 f7       	brne	.-8      	; 0x17e <main+0x112>
 186:	00 c0       	rjmp	.+0      	; 0x188 <main+0x11c>
 188:	00 00       	nop
			_delay_ms(period);
			PORTD = 0x06;
 18a:	26 e0       	ldi	r18, 0x06	; 6
 18c:	22 bb       	out	0x12, r18	; 18
 18e:	2f ef       	ldi	r18, 0xFF	; 255
 190:	31 ee       	ldi	r19, 0xE1	; 225
 192:	44 e0       	ldi	r20, 0x04	; 4
 194:	21 50       	subi	r18, 0x01	; 1
 196:	30 40       	sbci	r19, 0x00	; 0
 198:	40 40       	sbci	r20, 0x00	; 0
 19a:	e1 f7       	brne	.-8      	; 0x194 <main+0x128>
 19c:	00 c0       	rjmp	.+0      	; 0x19e <main+0x132>
 19e:	00 00       	nop
			_delay_ms(period);
			PORTD = 0x0C;
 1a0:	2c e0       	ldi	r18, 0x0C	; 12
 1a2:	22 bb       	out	0x12, r18	; 18
 1a4:	2f ef       	ldi	r18, 0xFF	; 255
 1a6:	31 ee       	ldi	r19, 0xE1	; 225
 1a8:	44 e0       	ldi	r20, 0x04	; 4
 1aa:	21 50       	subi	r18, 0x01	; 1
 1ac:	30 40       	sbci	r19, 0x00	; 0
 1ae:	40 40       	sbci	r20, 0x00	; 0
 1b0:	e1 f7       	brne	.-8      	; 0x1aa <main+0x13e>
 1b2:	00 c0       	rjmp	.+0      	; 0x1b4 <main+0x148>
 1b4:	00 00       	nop
		PORTD = 0x09;		/* Last step to initial position */
		_delay_ms(period);
		_delay_ms(1000);

		/* Rotate Stepper Motor Anticlockwise with Full step sequence */
		for(int i=0;i<12;i++)
 1b6:	01 96       	adiw	r24, 0x01	; 1
 1b8:	8c 30       	cpi	r24, 0x0C	; 12
 1ba:	91 05       	cpc	r25, r1
 1bc:	84 f2       	brlt	.-96     	; 0x15e <main+0xf2>
			PORTD = 0x06;
			_delay_ms(period);
			PORTD = 0x0C;
			_delay_ms(period);
		}
		PORTD = 0x09;
 1be:	89 e0       	ldi	r24, 0x09	; 9
 1c0:	82 bb       	out	0x12, r24	; 18
 1c2:	8f ef       	ldi	r24, 0xFF	; 255
 1c4:	91 ee       	ldi	r25, 0xE1	; 225
 1c6:	24 e0       	ldi	r18, 0x04	; 4
 1c8:	81 50       	subi	r24, 0x01	; 1
 1ca:	90 40       	sbci	r25, 0x00	; 0
 1cc:	20 40       	sbci	r18, 0x00	; 0
 1ce:	e1 f7       	brne	.-8      	; 0x1c8 <main+0x15c>
 1d0:	00 c0       	rjmp	.+0      	; 0x1d2 <main+0x166>
 1d2:	00 00       	nop
 1d4:	3f ef       	ldi	r19, 0xFF	; 255
 1d6:	43 ed       	ldi	r20, 0xD3	; 211
 1d8:	80 e3       	ldi	r24, 0x30	; 48
 1da:	31 50       	subi	r19, 0x01	; 1
 1dc:	40 40       	sbci	r20, 0x00	; 0
 1de:	80 40       	sbci	r24, 0x00	; 0
 1e0:	e1 f7       	brne	.-8      	; 0x1da <main+0x16e>
 1e2:	00 c0       	rjmp	.+0      	; 0x1e4 <main+0x178>
 1e4:	00 00       	nop
 1e6:	44 cf       	rjmp	.-376    	; 0x70 <main+0x4>

000001e8 <_exit>:
 1e8:	f8 94       	cli

000001ea <__stop_program>:
 1ea:	ff cf       	rjmp	.-2      	; 0x1ea <__stop_program>
